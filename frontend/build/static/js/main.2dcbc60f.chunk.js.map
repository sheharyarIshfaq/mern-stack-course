{"version":3,"sources":["shared/context/auth-context.js","shared/components/UI/LoadingSpinner.js","shared/components/UI/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","NavLinks","authCtx","useContext","to","exact","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","UserPlaces","NewPlace","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","tokenExpiresIn","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.2dcbc60f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpiresIn =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpiresIn);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpiresIn.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport \"./NavLink.css\";\r\nconst NavLinks = () => {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          All Users\r\n        </NavLink>\r\n      </li>\r\n      {authCtx.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${authCtx.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n      )}\r\n      {authCtx.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">Add Place</NavLink>\r\n        </li>\r\n      )}\r\n      {!authCtx.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">Authenticate</NavLink>\r\n        </li>\r\n      )}\r\n      {authCtx.isLoggedIn && (\r\n        <li>\r\n          <button onClick={authCtx.logout}>Logout</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport Backdrop from \"../UI/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = () => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      {\r\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n          <nav className=\"main-navigation__drawer-nav\">\r\n            <NavLinks />\r\n          </nav>\r\n        </SideDrawer>\r\n      }\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\n// import Users from \"./user/pages/Users\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UI/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/auth\" />\n        </Route>\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}